trigger:
  branches:
    include:
      - main

variables:
  PROJECT_ID: your-gcp-project
  CLUSTER_NAME: your-gke-cluster
  CLUSTER_REGION: your-region
  IMAGE_TAG: $(Build.BuildId)

stages:
  - stage: Build
    jobs:
      - job: BuildAndPush
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: Docker@2
            displayName: Build and Push users-service
            inputs:
              command: buildAndPush
              repository: gcr.io/$(PROJECT_ID)/users-service
              tags: |
                $(IMAGE_TAG)
              Dockerfile: users-service/Dockerfile
              buildContext: users-service

          - task: Docker@2
            displayName: Build and Push orders-service
            inputs:
              command: buildAndPush
              repository: gcr.io/$(PROJECT_ID)/orders-service
              tags: |
                $(IMAGE_TAG)
              Dockerfile: orders-service/Dockerfile
              buildContext: orders-service

  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: DeployToGKE
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: "latest"

          - task: Bash@3
            displayName: Authenticate GKE
            inputs:
              targetType: "inline"
              script: |
                echo $GOOGLE_APPLICATION_CREDENTIALS_CONTENT > gcp-key.json
                gcloud auth activate-service-account --key-file=gcp-key.json
                gcloud container clusters get-credentials $(CLUSTER_NAME) --region $(CLUSTER_REGION) --project $(PROJECT_ID)

          - task: HelmDeploy@0
            displayName: Deploy Helm Chart
            inputs:
              connectionType: None
              command: upgrade
              chartType: FilePath
              chartPath: helm/microservices
              releaseName: microservices-demo
              install: true
              arguments: |
                --set usersService.image=gcr.io/$(PROJECT_ID)/users-service:$(IMAGE_TAG)                 --set ordersService.image=gcr.io/$(PROJECT_ID)/orders-service:$(IMAGE_TAG)
