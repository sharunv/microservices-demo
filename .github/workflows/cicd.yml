name: CI/CD to GKE (WIF)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write   # ðŸ‘ˆ required for WIF (OIDC token exchange)

    env:
      PROJECT_ID: project-gcp-468607
      REGION: us-central1            # Artifact Registry region
      AR_REPO: microrepo   # Artifact Registry repo name
      CLUSTER_NAME: velath
      CLUSTER_LOCATION: us-central1-a

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Authenticate to GCP via Workload Identity Federation
    - id: auth
      name: Authenticate to GCP (WIF)
      uses: google-github-actions/auth@v3
      with:
        workload_identity_provider: projects/237760814620/locations/global/workloadIdentityPools/github-pool/providers/github-provider
        service_account: github-actions-sa@project-gcp-468607.iam.gserviceaccount.com
        project_id: ${{ env.PROJECT_ID }}
        token_format: access_token

    # Configure Artifact Registry as Docker registry
    - name: Configure Docker for Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    # Build & push Users Service
    - name: Build & Push Users Service
      run: |
        IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/users-service:${{ github.sha }}
        docker build -t $IMAGE ./users-service
        docker push $IMAGE
        echo "USERS_IMAGE=$IMAGE" >> $GITHUB_ENV

    # Build & push Orders Service
    - name: Build & Push Orders Service
      run: |
        IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/orders-service:${{ github.sha }}
        docker build -t $IMAGE ./orders-service
        docker push $IMAGE
        echo "ORDERS_IMAGE=$IMAGE" >> $GITHUB_ENV

    # Get GKE credentials (via WIF)
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v3
      with:
        cluster_name: ${{ env.CLUSTER_NAME }}
        location: ${{ env.CLUSTER_LOCATION }}
        project_id: ${{ env.PROJECT_ID }}

    # Deploy with Helm
    - name: Helm upgrade
      run: |
        cd helm/microservices
        helm upgrade --install microservices-demo . \
          --set usersService.image=${{ env.USERS_IMAGE }} \
          --set ordersService.image=${{ env.ORDERS_IMAGE }}
